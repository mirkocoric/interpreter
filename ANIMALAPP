TO GIVEUP NODE TR G
SAYGIVEUP
LOCAL "NEWNAME
SAYNAMEQ
MAKE "NEWNAME ASKNEWNAME
IF EQUALP :G 1 [SAYDIFF FIRST :NODE :NEWNAME] [SAYSPEC :NEWNAME]
LOCAL "SENT
MAKE "SENT ASKSENT
OUTPUT LIST MKNODE SENT2Q :NEWNAME :SENT :NODE MKNODE :NEWNAME [] [] :TR
END
TO MAKEA NAME
IF MEMBERP FIRST FIRST :NAME [A E I O U][OUTPUT SE "AN :NAME][OUTPUT SE "A :NAME]
END
TO LEARN R
MAKE "DB SPLICE :DB ITEM 2 :R ITEM 1 :R
END
TO SAYSPEC NAME
PR [TELL ME SOMETHING SPECIAL]
PR SE [ABOUT] MAKEA :NAME
END
TO ASKVQ Q
LOCAL "S
MAKE "S FIRST :Q
IF EQUALP "S LAST :S [MAKE "S BL :S]
LOCAL "O
IF EQUALP :S FIST :Q [MAKE "O [DO THESE ANIMALS]] [MAKE "O [DOES THIS ANIMAL]]
OUTPUT SE SE :O :S BF :Q
END
TO RETF
OUTPUT EQUALP 0 1
END
TO ASKSENT
LOCAL "SENT
MAKE "SENT READLIST
IF REALSENT :SENT [OUTPUT :SENT]
SAYREALSENT
OUTPUT ASKSENT
END
TO SAYDIFF OLDNAME NEWNAME
PR SE [TELL ME SOMETHING ABOUT] MAKEA STRIPA :NEWNAME
PR SE [WHICH IS NOT TRUE ABOUT] MAKEA STRIPA :OLDNAME
END
TO ASKYN
LOCAL "A
MAKE "A READWORD
IF MEMBERP :A [YES NO][OUTPUT EQUALP "YES :A]
PR [PLEASE SAY YES OR NO]
OUTPUT ASKYN
END
TO RETT
OUTPUT EQUALP 1 1
END
TO ASK Q
LOCAL "PRE
LOCAL "PHRASES
MAKE "PHRASES [[IS [IS THIS ANIMAL]] [ARE [ARE THESE ANIMALS]] [HAS [DOES THIS ANIMAL HAVE]] [WOULD [WOULD THIS ANIMAL]] [CAN [CAN THIS ANIMAL]]]
MAKE "PRE ASSOC FIRST :Q :PHRASES
IF NOT EMPTYP :PRE [OUTPUT SE :PRE BF :Q]
OUTPUT ASKVQ :Q
END
TO ASSOC VERB PD
IF EMPTYP :PD [OUTPUT []]
IF EQUALP :VERB FIRST FIRST :PD [OUTPUT FIRST BUTFIST FIRST :PD]
OUTPUT ASSOC :VERB BUTFIRST :PD
END
TO ANIMAL_LOOP
IF DEFINEDP "ANIMAL [ERASE "ANIMAL RECYCLE]
LOCAL "R
MAKE "R SEARCHASK :DB []
IF NOT EQUALP :R "WIN [MAKE "DB SPLICE :DB ITEM 2 :R ITEM 1 :R]
PR [THAT WAS FUN. WANNA TRY AGAIN?]
IF NOT ASKYN [STOP]
ANIMAL_LOOP
END
TO ASKNEWNAME
LOCAL "NEWNAME
MAKE "NEWNAME STRIPA READLIST
IF NOT EMPTYP :NEWNAME [OUTPUT :NEWNAME]
PR [COME ON, TYPE A REAL NAME]
OUTPUT ASKNEWNAME
END
TO SENT2Q NAME SENT
OUTPUT STRIPNAME STRIPA :NAME STRIPA :SENT
END
TO SAYWIN
IF EQUALP RANDOM 2 1 [PR [LOGO MUST BE A GREAT LANGUAGE.]]
END
TO STRIPNAME N S
IF EMPTYP :N [OUTPUT :S]
LOCAL "FN
LOCAL "FS
MAKE "FN FIRST :N
MAKE "FS FIRST :S
IF MEMBERP :FS [IT THEY][OUTPUT BF :S]
IF EQUALP LAST :FS "S [MAKE "FS BUTLAST :FS]
IF OR EQUALP :FN FIRST :S EQUALP :FN :FS [OUTPUT STRIPNAME BUTFIRST :N BUTFIRST :S] [OUTPUT :S]
END
TO STRIPA S
IF EMPTYP :S [OUTPUT :S]
IF OR EQUALP FIRST :S "A EQUALP FIRST :S "AN [OUTPUT BUTFIRST :S]
OUTPUT :S
END
TO ANYWORDSP W L
IF OR EMPTYP :W EMPTYP :L [OUTPUT RETF]
IF MEMBERP FIRST :W :L [OUTPUT RETT]
OUTPUT ANYWORDSP BF :W :L
END
TO SPLICE DB TR NODE
IF EMPTYP :TR [OUTPUT :NODE]
IF EQUALP FIRST :TR 0 [OUTPUT MKNODE FIRST :DB SPLICE ITEM 2 :DB BUTFIRST :TR :NODE ITEM 3 :DB]
OUTPUT MKNODE FIRST :DB ITEM 2 :DB SPLICE ITEM 3 :DB BUTFIRST :TR :NODE
END
TO SAYREALSENT
PR [AW, BE SERIOUS.]
PR [I ASKED YOU A REAL QUESTION]
END
TO FINALASK NODE TR
PR ASKNAME :FIRST :NODE
IF ASKYN [SAYWIN OUTPUT "WIN]
OUTPUT GIVEUP :NODE :TR 1
END
TO REALSENT SENT
MAKE "SENT STRIPA :SENT
IF ANYWORDSP [MORON SHIT FUCK IDIOT] :SENT [OUTPUT RETF]
IF LEN :SENT < 3 [OUTPUT RETF]
OUTPUT RETT
END
TO SAYNAMEQ
PR [JUST WHAT KIND OF BEAST]
PR [DID YOU HAVE IN MIND?]
END
TO MKNODE DATA L R
IF AND EMPTYP :L EMPTYP :R [OUTPUT LIST :DATA]
OUTPUT LPUT :R LIST :DATA :L
END
TO ASKNAME NAME
OUTPUT SE [IS IT] MAKEA :NAME
END
TO LEN LIST
IF EMPTYP :LIST [OUTPUT 0]
OUTPUT 1 + LEN BUTFIRST :LIST
END
TO LEARNASKSENT TR NEWNAME
LOCAL "NODE
MAKE "NODE MKNODE :NEWNAME ASKSENT [] MKNODE :NEWNAME [] []
OUTPUT LIST :NODE :TR
END
TO SAYGIVEUP
PR [WELL, I AM NOT TOO SHARP TODAY.]
PR [I GIVE UP.]
END
TO ANIMAL
PR [LET'S PLAY A GAME.]
PR [CHOOSE A RANDOM ANIMAL]
PR [I'M GONNA TRY TO GUESS IT BY]
PR [ASKING QUESTIONS, AND YOU GIVE ME YES OR NO ANSWERS.]
MAKE "ZZ STRIPNAME [] []
MAKE "ZZ ASKVQ [CAN JUMP]
ERN "ZZ
PR [OK, LET'S GO.]
ANIMAL_LOOP
END
TO SEARCHASK NODE TR
IF EMPTYP BF :NODE [OUTPUT FINALASK :NODE :TR]
PR ASK FIRST :NODE
LOCAL "NXIT
IF ASKYN [MAKE "NXIT 1][MAKE "NXIT 0]
LOCAL "NXNODE
MAKE "NXNODE ITEM :NXIT + 2 :NODE
IF EMPTYP :NXNODE [OUTPUT GIVEUP :NODE :TR 0]
MAKE "TR LPUT :NXIT :TR
OUTPUT SEARCHASK :NXNODE :TR
END
DB [['HAS','HORNS'],[],[['BULL']]]
